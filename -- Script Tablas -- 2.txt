CREATE EXTENSION postgis;

CREATE TABLE Institucion (
    id BIGSERIAL PRIMARY KEY,
    nombre VARCHAR(255),
    ubicacion GEOMETRY(Point, 4326)  -- Columna geoespacial para ubicación
);

-- Crear índice espacial para mejorar el rendimiento en consultas geoespaciales
CREATE INDEX idx_institucion_ubicacion ON Institucion USING GIST (ubicacion);

-- Tabla Habilidad
CREATE TABLE Habilidad (
    id BIGSERIAL PRIMARY KEY,
    nombre VARCHAR(255)
);

CREATE TABLE Emergencia (
    id BIGSERIAL PRIMARY KEY,
    nombre VARCHAR(255),
    descripcion TEXT,
    ubicacion GEOMETRY(Point, 4326),  -- Columna geoespacial para ubicación
    institucionId BIGINT REFERENCES Institucion(id)  -- Clave foránea a Institucion
);

-- Crear índice espacial
CREATE INDEX idx_emergencia_ubicacion ON Emergencia USING GIST (ubicacion);

-- Tabla EmergenciaHabilidad
CREATE TABLE EmergenciaHabilidad (
    id BIGSERIAL PRIMARY KEY,
    emergenciaId BIGINT REFERENCES Emergencia(id) NULL,
    habilidadId BIGINT REFERENCES Habilidad(id) NULL
);

-- Tabla EstadoTarea
CREATE TABLE EstadoTarea (
    id BIGSERIAL PRIMARY KEY,
    estado VARCHAR(255)
);

-- Tabla Tarea
CREATE TABLE Tarea (
    id BIGSERIAL PRIMARY KEY,
    nombre VARCHAR(255),
    descripcion TEXT,
    emergenciaId BIGINT REFERENCES Emergencia(id) NULL,
    estadoTareaId BIGINT REFERENCES EstadoTarea(id) NULL
);

-- Tabla TareaHabilidad
CREATE TABLE TareaHabilidad (
    id BIGSERIAL PRIMARY KEY,
    tareaId BIGINT REFERENCES Tarea(id) NULL,
    habilidadId BIGINT REFERENCES Habilidad(id) NULL
);


CREATE TABLE Voluntario (
    id BIGSERIAL PRIMARY KEY,
    nombre VARCHAR(255),
    apellido VARCHAR(255),
    ubicacion GEOMETRY(Point, 4326),  -- Columna geoespacial para ubicación
    correo VARCHAR(255),
    contrasena VARCHAR(255),
    idtarea BIGINT  -- Clave foránea a Tarea (si es necesario)
);

-- Crear índice espacial
CREATE INDEX idx_voluntario_ubicacion ON Voluntario USING GIST (ubicacion);

-- Tabla Ranking
CREATE TABLE Ranking (
    id BIGSERIAL PRIMARY KEY,
    voluntarioId BIGINT REFERENCES Voluntario(id) NULL,
    puntuacion INT
);

-- Tabla VolHabilidad
CREATE TABLE VolHabilidad (
    id BIGSERIAL PRIMARY KEY,
    voluntarioId BIGINT REFERENCES Voluntario(id) NULL,
    habilidadId BIGINT REFERENCES Habilidad(id) NULL
);

CREATE TABLE auditorio (
    id SERIAL PRIMARY KEY,
    user_id INT,
    operation_type TEXT,
    query_text TEXT,
    execution_time TIMESTAMP
);

CREATE TABLE audit_log (
                           id SERIAL PRIMARY KEY,
                           user_id INT,
                           operation_type TEXT,
                           query_text TEXT,
                           execution_time TIMESTAMP
);


ALTER TABLE Tarea ADD FOREIGN KEY (estadoTareaId) REFERENCES EstadoTarea(id);

-- Insertar datos en la tabla Institucion
INSERT INTO Institucion (nombre, ubicacion) VALUES
    ('Institucion 1', ST_SetSRID(ST_Point(-73.95, 40.78), 4326)),
    ('Institucion 2', ST_SetSRID(ST_Point(-74.01, 40.71), 4326)),
    ('Institucion 3', ST_SetSRID(ST_Point(-73.94, 40.82), 4326)),
    ('Institucion 4', ST_SetSRID(ST_Point(-73.99, 40.75), 4326)),
    ('Institucion 5', ST_SetSRID(ST_Point(-73.97, 40.79), 4326));

-- Insertar datos en la tabla Emergencia
INSERT INTO Emergencia (nombre, descripcion, ubicacion, institucionId) VALUES
    ('Emergencia 1', 'Descripción de Emergencia 1', ST_SetSRID(ST_Point(-73.96, 40.77), 4326), 1),
    ('Emergencia 2', 'Descripción de Emergencia 2', ST_SetSRID(ST_Point(-74.02, 40.72), 4326), 2),
    ('Emergencia 3', 'Descripción de Emergencia 3', ST_SetSRID(ST_Point(-73.93, 40.83), 4326), 3),
    ('Emergencia 4', 'Descripción de Emergencia 4', ST_SetSRID(ST_Point(-73.98, 40.76), 4326), 4),
    ('Emergencia 5', 'Descripción de Emergencia 5', ST_SetSRID(ST_Point(-73.96, 40.80), 4326), 5);

